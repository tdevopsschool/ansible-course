---

- name: Install 2048
  hosts: all
  become: true
  become_user: root
  vars:
    sshgroup_name: sshusers
    user:
      login: deploy
      password_hash:
        "$6$NwI7op8FHR1VQta6$zuQXHtNtM/7SRQsf1./18WbBrHMq4mT88nWh67ThmlWcqyVX3F\
        BTY9uj/07tR9ViDEvjg6/bh0y3mSjeDQYe3."
      authorized_key:
        "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr\
        +kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6I\
        edplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2\
        hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZE\
        nDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHln\
        VYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key"
      group: "{{ sshgroup_name }}"

  tasks:
    - name: Create {{ sshgroup_name }} group for {{ user.login }}
      group:
        name: "{{ sshgroup_name }}"
        state: present

    - name: Create user {{ user.login }} account
      user:
        name: "{{ user.login }}"
        groups: "{{ user.group }}"
        shell: /bin/bash
        update_password: always
        password: "{{ user.password_hash }}"

    - name: Add user {{ user.login }} to sudoers
      lineinfile:
        dest: /etc/sudoers
        state: present
        line: "{{ user.login }} ALL=(ALL:ALL) NOPASSWD:ALL"
        validate: '/usr/sbin/visudo -cf %s'

    - name: Create authorized key for user {{ user.login }}
      authorized_key:
        user: "{{ user.login }}"
        state: present
        key: "{{ user.authorized_key }}"

    - name: Install epel-release via yum
      yum:
        name: epel-release
        state: present
        enablerepo: extras

    - name: Install software
      package:
        name:
          - httpd
          - git
          - iptables-services
          - net-snmp
          - net-snmp-utils
          - python-pip
        state: present

    - name: install latest pyOpenSSL if needed
      pip:
        name: pyopenssl
        state: present

    - name: Checkout git repository
      git:
        repo: https://github.com/ultral/2048.git
        dest: /var/www/html
        force: true
        version: fc1ef4fe5a5fcccea7590f3e4c187c75980b353f

    - name: Upgrade pip to latest vesion
      pip:
        name: pip
        extra_args: --upgrade

    - name: Allow access via HTTP
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: '80'
        ctstate: NEW
        jump: ACCEPT

    - name: Allow access via UDP for snmpd
      iptables:
        chain: INPUT
        protocol: udp
        destination_port: '161'
        ctstate: NEW
        jump: ACCEPT

    - name: Copy a new "snmpd.conf file into /etc/snmpd/snmpd.conf
      copy:
        src: snmpd.conf
        dest: /etc/snmp/snmpd.conf
        owner: "{{ user.login }}"
        group: "{{ user.group }}"
        mode: preserve
        force: true
        backup: true

    # - name: Configure snmpd via blockinfile
    #   blockinfile:
    #     path: /etc/snmp/snmpd.conf
    #     state: present
    #     block: |
    #       syslocation Server Room
    #       syscontact SysAdmin (devops@example.com)
    #       rocommunity snmp_secret_rocommunity
    #     insertafter: EOF

    - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
      openssl_privatekey:
        path: /etc/ssl/certs/ansible.com.pem

    - name: Generate an OpenSSL Certificate Signing Request
      openssl_csr:
        path: /etc/ssl/certs/ansible.com.csr
        privatekey_path: /etc/ssl/certs/ansible.com.pem
        common_name: www.ansible.com

    - name: Generate a Self Signed OpenSSL certificate
      openssl_certificate:
        path: /etc/ssl/certs/ansible.com.crt
        privatekey_path: /etc/ssl/certs/ansible.com.pem
        csr_path: /etc/ssl/certs/ansible.com.csr
        provider: selfsigned

    - name: Start httpd
      systemd:
        name: httpd
        state: started

    - name: Start and enable snmpd
      systemd:
        name: snmpd
        enabled: true
        state: started

    - name: Print message
      debug:
        msg: "Play 2028: http://localhost:8080/"
